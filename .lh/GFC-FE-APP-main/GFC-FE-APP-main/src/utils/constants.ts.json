{
    "sourceFile": "GFC-FE-APP-main/GFC-FE-APP-main/src/utils/constants.ts",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1752948184967,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1752948184967,
            "name": "Commit-0",
            "content": "import { Question as QueObject } from \"./Question\"\r\n\r\n// Files to define all the constants, enums and interfaces\r\nexport enum FOLDER_VIEW_TYPE {\r\n  FILE = 'File',\r\n  ROWS = 'Rows'\r\n}\r\n\r\nexport enum HTTP_METHODS {\r\n  GET = 'GET',\r\n  POST = 'POST',\r\n  PUT = 'PUT',\r\n  DELETE = 'DELETE'\r\n}\r\n\r\nexport enum SESSION_STORAGE_KEYS {\r\n  TOKEN = 'TOKEN',\r\n  USER_ID = 'USER_ID',\r\n  EMAIL = 'EMAIL',\r\n  USERNAME = 'USERNAME',\r\n  IS_AUTH = 'IS_AUTH',\r\n  APP_TOUR_COMPLETED = 'APP_TOUR_COMPLETED'\r\n}\r\n\r\nexport enum ACTION_TYPES {\r\n  ADD_QUESTION = 'ADD_QUESTION',\r\n  CHANGE_TYPE = 'CHANGE_TYPE',\r\n  SET_DOC_NAME = 'SET_DOC_NAME',\r\n  SET_DOC_DESC = 'SET_DOC_DESC'\r\n}\r\n\r\nexport enum QUESTION_TYPES {\r\n  RADIO = 'radio',\r\n  CHECKBOX = 'checkbox',\r\n  TEXT = 'text',\r\n  DATE = 'date',\r\n  TIME = 'datetime-local'\r\n}\r\n\r\nexport enum ROUTE_PATHS {\r\n  HOME = '/',\r\n  LOGIN = '/login',\r\n  QUESTION_PAPER = '/forms/:documentId',\r\n  USERVIEW = '/viewform/:documentId',\r\n  THANK_YOU = '/thank-you/:documentId',\r\n  MY_RESPONSE = '/my-response/:documentId'\r\n}\r\n\r\nexport enum UPDATE_QUESTION_STATE {\r\n  ADD = 'ADD'\r\n}\r\n\r\nexport enum REQUEST_URLS {\r\n  LOGIN = '/login',\r\n  REGISTER = '/register',\r\n  CREATE_NEW_DOCUMENT = '/create-document',\r\n  GET_ALL_DOCUMENTS = '/documents',\r\n  GET_DOCUMENT = '/document',\r\n  DELETE_DOCUMENT = '/delete',\r\n  UPDATE_DOCUMENT = '/update-document',\r\n  USER_RESPONSE = '/user-response',\r\n  MY_RESPONSE = '/user-response/my'\r\n}\r\n\r\nexport enum PROFILE_ACTION_MENUS {\r\n  LOGOUT = 'Logout'\r\n}\r\n\r\nexport enum QUESTION_ACTION_TYPES {\r\n  DOCUMENT_LOADED = 'DOCUMENT_LOADED',\r\n  CLOSE_EXPANDED_QUESTIONS = 'CLOSE_EXPANDED_QUESTIONS',\r\n  EXPAND_QUESTION = 'EXPAND_QUESTION',\r\n  UPDATE_QUESTION = 'UPDATE_QUESTION',\r\n  ADD_NEW_OPTION = 'ADD_NEW_OPTION',\r\n  REMOVE_OPTION = 'REMOVE_OPTION',\r\n  ADD_NEW_QUESTION = 'ADD_NEW_QUESTION',\r\n  UPDATE_QUESTION_TYPE = 'UPDATE_QUESTION_TYPE',\r\n  DELETE_QUESTION = 'DELETE_QUESTION',\r\n  COPY_QUESTION = 'COPY_QUESTION',\r\n  TOGGLE_REQUIRED = 'TOGGLE_REQUIRED',\r\n  HANDLE_OPTION_VALUE = 'HANDLE_OPTION_VALUE',\r\n  UPDATE_DOCUMENT_NAME = 'UPDATE_DOCUMENT_NAME',\r\n  UPDATE_DOCUMENT_DESCRIPTION = 'UPDATE_DOCUMENT_DESCRIPTION',\r\n  REORDER_QUESTIONS = 'REORDER_QUESTIONS',\r\n  VIEW_DOCUMENT = 'VIEW_DOCUMENT'\r\n}\r\n\r\nexport const SOCKET_CHANNEL_NAMES = {\r\n  USER_RESPONSE: 'USER_RESPONSE'\r\n}\r\n\r\nexport const REQUEST_SUCCESS_MESSAGES = {\r\n  LOGGED_IN_SUCCESSFULLY: 'Logged in successfully',\r\n  USER_REGISTERED_SUCCESSFULLY: 'User registered successfully',\r\n  DOCUMENT_DELETED_SUCCESSFULLY: 'Document deleted successfully',\r\n  QUESTIONS_LOADED_SUCCESSFULLY: 'Questions loaded successfully',\r\n  DOCUMENT_CREATED_SUCCESSFULLY: 'Document created successfully',\r\n  QUESTIONS_SAVED_SUCCESSFULLY: \"Questions saved successfully\",\r\n  REQUEST_SAVED_SUCCESSFULLY: \"Response saved successfully\"\r\n}\r\n\r\nexport const REQUEST_FAILURE_MESSAGES = {\r\n  PLEASE_ENTER_DETAILS: \"Please enter all valid details\",\r\n  LOGIN_FAILED: 'Login Failed, Please try again',\r\n  REGISTRATION_FAILED: 'Registration Failed, Please try again',\r\n  DOCUMENT_DELETION_FAILED: 'Document is not deleted, Please try again',\r\n  DOCUMENT_CREATION_FAILED: 'Document creation failed, Please try again',\r\n  DOCUMENT_LOADING_FAILED: 'Unable to load the documents',\r\n  QUESTIONS_LOADING_FAILED: 'Unable to load the questions',\r\n  SAVING_QUESTIONS_FAILED: 'Unable to save the questions',\r\n  SAVING_USER_RESPONSE_FAILED: 'Unable to save the user response',\r\n  PLEASE_ANSWER_ALL_REQUIRED_QUESTIONS: 'Please answer all required questions'\r\n}\r\n\r\n// interfaces\r\nexport interface ActionPayload {\r\n  type: ACTION_TYPES,\r\n  [key: string]: any\r\n}\r\n\r\nexport interface Option {\r\n  option: string\r\n}\r\n\r\nexport interface Question {\r\n  question: string,\r\n  questionType: string,\r\n  options: Option[],\r\n  open?: boolean,\r\n  required?: boolean\r\n}\r\n\r\nexport interface DocumentInitialState {\r\n  questions: QueObject[],\r\n  documentName: string,\r\n  documentDescription: string,\r\n  currQueIndex: number,\r\n  currentFocusedQuestionId: string,\r\n  viewDocument: boolean,\r\n  createdByUserID: string\r\n}\r\n\r\nexport interface UserRegister {\r\n  username?: string,\r\n  email?: string,\r\n  phone?: string,\r\n  password?: string\r\n}\r\n\r\nexport interface UserLogin {\r\n  email?: string,\r\n  password?: string\r\n}\r\n\r\nexport interface Option {\r\n  option: string\r\n}\r\n\r\nexport interface Theme {\r\n  backgroundColor: string;\r\n  textColor: string;\r\n}\r\n\r\nexport interface ThemeContextType {\r\n  theme: Theme;\r\n  setTheme: React.Dispatch<React.SetStateAction<Theme>>;\r\n}\r\n\r\nexport interface AuthContextType {\r\n  isLoggedIn: boolean;\r\n  user: any;\r\n  handleLogin: React.Dispatch<React.SetStateAction<any>>;\r\n  handleLogout: React.Dispatch<React.SetStateAction<any>>;\r\n}\r\n\r\nexport interface QuestionPaper {\r\n  showQuestionPaper: boolean,\r\n  documentName: string\r\n}\r\n\r\nexport interface QuestionPaperContextType {\r\n  questionPaper: QuestionPaper;\r\n  setQuestionPaper: React.Dispatch<React.SetStateAction<QuestionPaper>>;\r\n}\r\n\r\nexport interface UndoRedoOperationItem {\r\n  optionIndex?: number,\r\n  questionIndex?: number,\r\n  actionType?: QUESTION_ACTION_TYPES\r\n}\r\n\r\nexport interface Answers {\r\n  [key: string]: any\r\n}\r\n\r\nexport interface ResponseData {\r\n  id?: number,\r\n  username?: string,\r\n  submittedOn?: string\r\n}\r\n\r\n// constant variables\r\nexport const LOADING = 'loading';\r\nexport const INTERNAL_SERVER_ERROR = 'Internal Server Error';\r\nexport const REQUEST_IN_PROGRESS = 'Request in progress';\r\n"
        }
    ]
}